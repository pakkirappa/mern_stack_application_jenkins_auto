apiVersion: apps/v1
kind: Deployment
metadata:
  name: mern-backend
  labels:
    app: mern-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mern-backend
  template:
    metadata:
      labels:
        app: mern-backend
    spec:
      containers:
      - name: mern-backend
        image: mern-backend:latest
        ports:
        - containerPort: 5000
        env:
        - name: PORT
          value: "5000"
        - name: NODE_ENV
          value: "production"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: uri
        
        # Liveness probe - checks if container is alive
        livenessProbe:
          httpGet:
            path: /alive
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Readiness probe - checks if container is ready to serve traffic
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Startup probe - gives container time to start up
        startupProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: mern-backend-service
spec:
  selector:
    app: mern-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: ClusterIP

---
# Health check monitoring service
apiVersion: v1
kind: Service
metadata:
  name: mern-backend-health
  labels:
    app: mern-backend
    service: health
spec:
  selector:
    app: mern-backend
  ports:
    - name: health
      protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP